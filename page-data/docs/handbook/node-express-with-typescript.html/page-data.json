{"componentChunkName":"component---src-templates-documentation-tsx","path":"/docs/handbook/node-express-with-typescript.html","result":{"data":{"markdownRemark":{"id":"bee5bea8-e78e-512c-8349-a14362331a86","excerpt":"Getting Started First things first, we need to create the directory for our application: Time to set up our package.json file where we can define all our…","html":"<h2 id=\"getting-started\" style=\"position:relative;\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting Started</h2>\n<p>First things first, we need to create the directory for our application:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">mkdir express-typescript</span></div></code></div></pre>\n<p>Time to set up our <code>package.json</code> file where we can define all our dependencies as well as executable scripts.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm init</span></div></code></div></pre>\n<p>Once this script is run, it will ask us the following questions:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">package name: (src) express-typescript</span></div><div class='line'><span style=\"color: #000000\">version: (1.0.0)</span></div><div class='line'><span style=\"color: #000000\">description:</span></div><div class='line'><span style=\"color: #000000\">entry point: index.ts</span></div><div class='line'><span style=\"color: #795E26\">test</span><span style=\"color: #000000\"> command:</span></div><div class='line'><span style=\"color: #000000\">git repository:</span></div><div class='line'><span style=\"color: #000000\">keywords:</span></div><div class='line'><span style=\"color: #000000\">author:</span></div><div class='line'><span style=\"color: #000000\">license: (ISC)</span></div></code></div></pre>\n<p>Feel free to provide the correct details. For now, the only information we cared to provide is the <code>package name</code> and\nthe <code>entry point</code> set to <strong>index.ts</strong>.</p>\n<h2 id=\"installing-dependencies\" style=\"position:relative;\"><a href=\"#installing-dependencies\" aria-label=\"installing dependencies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing Dependencies</h2>\n<p>Since we are going to work with Express.js, we need to install Express.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm i --save-dev express</span></div></code></div></pre>\n<p>We need to install TypeScript as well as Express types as part of the dev dependencies to take advantage of TypeScript</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm i --save-dev typescript @types/express</span></div></code></div></pre>\n<h2 id=\"create-minimal-server-with-expressjs-and-typescript\" style=\"position:relative;\"><a href=\"#create-minimal-server-with-expressjs-and-typescript\" aria-label=\"create minimal server with expressjs and typescript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Minimal Server with Express.js and TypeScript</h2>\n<p>Let’s create what could be considered the most basic server using Express.js. Inside the <code>src</code> folder, create an\n<strong>index.ts</strong> file and copy the following code:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">typescript</div><div class='code-container'><code><div class='line'><span style=\"color: #AF00DB\">import</span><span style=\"color: #000000\"> </span><span style=\"color: #001080\">express</span><span style=\"color: #000000\">, { </span><span style=\"color: #001080\">Request</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">Response</span><span style=\"color: #000000\"> } </span><span style=\"color: #AF00DB\">from</span><span style=\"color: #000000\"> </span><span style=\"color: #A31515\">'express'</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">app</span><span style=\"color: #000000\"> = </span><span style=\"color: #795E26\">express</span><span style=\"color: #000000\">();</span></div><div class='line'><span style=\"color: #0000FF\">const</span><span style=\"color: #000000\"> </span><span style=\"color: #0070C1\">port</span><span style=\"color: #000000\"> = </span><span style=\"color: #098658\">3000</span><span style=\"color: #000000\">;</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">app</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">get</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'/'</span><span style=\"color: #000000\">, (</span><span style=\"color: #001080\">req</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">Request</span><span style=\"color: #000000\">, </span><span style=\"color: #001080\">res</span><span style=\"color: #000000\">: </span><span style=\"color: #1C6277\">Response</span><span style=\"color: #000000\">) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #001080\">res</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">send</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">'Hello World!'</span><span style=\"color: #000000\">);</span></div><div class='line'><span style=\"color: #000000\">});</span></div><div class='line'></div><div class='line'><span style=\"color: #001080\">app</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">listen</span><span style=\"color: #000000\">(</span><span style=\"color: #001080\">port</span><span style=\"color: #000000\">, () </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> {</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #001080\">console</span><span style=\"color: #000000\">.</span><span style=\"color: #795E26\">log</span><span style=\"color: #000000\">(</span><span style=\"color: #A31515\">`Example app listening at http://localhost:</span><span style=\"color: #0000FF\">${</span><span style=\"color: #001080\">port</span><span style=\"color: #0000FF\">}</span><span style=\"color: #A31515\">`</span><span style=\"color: #000000\">)</span></div><div class='line'><span style=\"color: #000000\">});</span></div></code></div></pre>\n<p>As you notice, it will be a simple GET API endpoint returning a message.</p>\n<h2 id=\"running-typescript-files-in-nodejs-understanding-the-process\" style=\"position:relative;\"><a href=\"#running-typescript-files-in-nodejs-understanding-the-process\" aria-label=\"running typescript files in nodejs understanding the process permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running TypeScript Files in Node.js: Understanding the Process</h2>\n<p>First, it is important for us to understand the process that happens to run TypeScript files in node.js. Previously, we\ncreated a simple server inside the <code>index.ts</code>. If we were working with plain JavaScript, a similar code could be written\nin a <code>js</code> file such as <code>index.js</code>. Normally, we will run a <code>js</code> file using the node command.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">node src/index.js</span></div></code></div></pre>\n<p>If we try to do something similar with <code>index.ts</code> file, the terminal will fail due to syntax errors as we are writing\ncode in TypeScript.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">// it will fail</span></div><div class='line'><span style=\"color: #000000\">node src/index.ts</span></div></code></div></pre>\n<p>What we need to do is to compile our TypeScript code into JavaScript code, and we are going to do that using the <code>tsc</code>\ncommand which it is available after installing typescript dependency in the project.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npx tsc src/index.ts</span></div></code></div></pre>\n<p>This will generate an <code>index.js</code> file. Now that we have our JavaScript file, we can use <code>node</code> to run our code.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">node src/index.js</span></div></code></div></pre>\n<h3 id=\"running-typescript-files-in-nodejs-quick-process\" style=\"position:relative;\"><a href=\"#running-typescript-files-in-nodejs-quick-process\" aria-label=\"running typescript files in nodejs quick process permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Running TypeScript Files in Node.js: Quick Process</h3>\n<p>There is a package available called <a href=\"https://www.npmjs.com/package/ts-node\">ts-node</a> which allows executing our\nTypeScript file in node. Therefore, we are going to install <code>ts-node</code> as part of our development dependencies.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npm i --save-dev ts-node</span></div></code></div></pre>\n<p>Once the package is installed, we can run our project with only one command.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">bash</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">npx ts-node src/index.ts</span></div></code></div></pre>\n<p>The best thing is that we don’t see any <code>index.js</code> file generated anymore</p>\n<h2 id=\"setting-up-typescript-configuration\" style=\"position:relative;\"><a href=\"#setting-up-typescript-configuration\" aria-label=\"setting up typescript configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up TypeScript Configuration</h2>\n<p>The <strong>tsconfig.json</strong> file specifies the root files and the compiler options required to compile a TypeScript project.\nWithout it, our TypeScript project would still feel as a JavaScript project because we are not enforcing the usage of\ntypes in our codebase. Therefore, we are going to create a <code>tsconfig.json</code> file in the root folder of our project. Once\nthis is done, add the following configuration:</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">json</div><div class='code-container'><code><div class='line'><span style=\"color: #000000\">{</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"compilerOptions\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"module\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"commonjs\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"esModuleInterop\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"allowSyntheticDefaultImports\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"target\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"es6\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"noImplicitAny\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"moduleResolution\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"node\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"sourceMap\"</span><span style=\"color: #000000\">: </span><span style=\"color: #0000FF\">true</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"outDir\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"dist\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"baseUrl\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\".\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #0451A5\">\"paths\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">          </span><span style=\"color: #0451A5\">\"*\"</span><span style=\"color: #000000\">: [</span></div><div class='line'><span style=\"color: #000000\">              </span><span style=\"color: #A31515\">\"node_modules/*\"</span><span style=\"color: #000000\">,</span></div><div class='line'><span style=\"color: #000000\">              </span><span style=\"color: #A31515\">\"src/types/*\"</span></div><div class='line'><span style=\"color: #000000\">          ]</span></div><div class='line'><span style=\"color: #000000\">      },</span></div><div class='line'><span style=\"color: #000000\">  },</span></div><div class='line'><span style=\"color: #000000\">  </span><span style=\"color: #0451A5\">\"include\"</span><span style=\"color: #000000\">: [</span></div><div class='line'><span style=\"color: #000000\">      </span><span style=\"color: #A31515\">\"src/**/*\"</span></div><div class='line'><span style=\"color: #000000\">  ]</span></div><div class='line'><span style=\"color: #000000\">}</span></div></code></div></pre>\n<h2 id=\"setting-up-scripts-in-the-packagejson\" style=\"position:relative;\"><a href=\"#setting-up-scripts-in-the-packagejson\" aria-label=\"setting up scripts in the packagejson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting Up Scripts in the package.json</h2>\n<p>Now that we understand how to run TypeScript files, we can set up a start script in the package.json for our\napplication.</p>\n<pre class=\"shiki light-plus\" style=\"background-color: #FFFFFF; color: #000000\"><div class=\"language-id\">json</div><div class='code-container'><code><div class='line'><span style=\"color: #A31515\">\"scripts\"</span><span style=\"color: #000000\">: {</span></div><div class='line'><span style=\"color: #000000\">    </span><span style=\"color: #0451A5\">\"start\"</span><span style=\"color: #000000\">: </span><span style=\"color: #A31515\">\"npx ts-node src/index.ts\"</span></div><div class='line'><span style=\"color: #000000\">},</span></div></code></div></pre>\n<p>Once we save, we can open the terminal and run <code>npm run start</code> and we will notice our project is running.</p>","headings":[{"value":"Getting Started","depth":2},{"value":"Installing Dependencies","depth":2},{"value":"Create Minimal Server with Express.js and TypeScript","depth":2},{"value":"Running TypeScript Files in Node.js: Understanding the Process","depth":2},{"value":"Running TypeScript Files in Node.js: Quick Process","depth":3},{"value":"Setting up TypeScript Configuration","depth":2},{"value":"Setting Up Scripts in the package.json","depth":2}],"frontmatter":{"permalink":"/docs/handbook/node-express-with-typescript.html","title":"How to Set up Basic Node.js + Express.js Server with TypeScript","disable_toc":null,"handbook":null,"oneline":"Write Express in TypeScript","preamble":null,"deprecated_by":null,"deprecation_redirects":null,"experimental":null}},"prev":null,"next":null},"pageContext":{"id":"7-how-to-set-up-basic-node.js-+-express.js-server-with-typescript","slug":"/docs/handbook/node-express-with-typescript.html","repoPath":"/packages/documentation/copy/en/project-config/Basic Node Express Server with TypeScript.md","lang":"en","modifiedTime":"2023-08-07T11:50:22.957Z"}},"staticQueryHashes":[]}