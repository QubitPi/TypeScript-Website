"use strict";(self.webpackChunktypescriptlang_org=self.webpackChunktypescriptlang_org||[]).push([[812],{5649:function(e,t,l){l.d(t,{R:function(){return a}});var n=l(2155),r=l(1589);const a=e=>{const t=t=>e.active&&e.active.toLowerCase()===t?"active":"";return n.createElement("nav",{"aria-label":"Developer tools",className:"navbar-sub dev-tools"},n.createElement("ul",{className:"nav"},n.createElement("li",{className:"name"},n.createElement("h3",null,"Developer Tools")),n.createElement("li",{style:{display:"none"}},n.createElement("a",{className:t("compiler api"),href:(0,r.withPrefix)("/dev/compiler")},"Compiler API")),n.createElement("li",null,n.createElement("a",{className:t("sandbox"),href:(0,r.withPrefix)("/dev/sandbox")},"Sandbox")),n.createElement("li",null,n.createElement("a",{className:t("twoslash"),href:(0,r.withPrefix)("/dev/twoslash")},"Twoslash")),n.createElement("li",null,n.createElement("a",{className:t("typescript vfs"),href:(0,r.withPrefix)("/dev/typescript-vfs")},"TypeScript VFS")),n.createElement("li",null,n.createElement("a",{className:t("playground plugins"),href:(0,r.withPrefix)("/dev/playground-plugins")},"Playground Plugins")),n.createElement("li",null,n.createElement("a",{className:t("bug workbench"),href:(0,r.withPrefix)("/dev/bug-workbench")},"Bug Workbench"))))}},2326:function(e,t,l){l.r(t);var n=l(2155),r=l(3016),a=l(1589),s=l(2131),o=l(5649);const c=e=>n.createElement(n.Fragment,null,n.createElement(r.P,{title:"Developers - TypeScript VFS",description:"Run TypeScript in the browser, or anywhere - using a virtual file-system",lang:"en"},n.createElement("div",{id:"dev"},n.createElement(o.R,{active:"typescript vfs"}),n.createElement("div",{className:"raised content main-content-block"},n.createElement("div",{className:"split-fivehundred"},n.createElement("h1",{style:{marginTop:"20px"}},"Easy access to the compiler API"),n.createElement("p",null,"TypeScript VFS lets you create a self-contained TypeScript environment entirely under your control. This library is used to power the Playground, and provides the underlying tooling for ",n.createElement(a.Link,{to:"/dev/twoslash"},"twoslash")," code samples."),n.createElement("p",null,"There are 3 main uses for TypeScript VFS:"),n.createElement("ul",null,n.createElement("li",null,"Creating a TypeScript Program as an entry-point to the compiler API"),n.createElement("li",null,"Running TypeScript to emit files like ",n.createElement("code",null,"*.js"),", ",n.createElement("code",null,"*.d.ts")," or ",n.createElement("code",null,"*.map")),n.createElement("li",null,"Using TypeScript's language service to make the same calls an editor would make")),n.createElement("p",null,"You can learn more in the ",n.createElement("a",{href:"https://github.com/microsoft/TypeScript-Website/blob/v2/packages/typescript-vfs/"},"TypeScript VFS README"))),n.createElement("div",{className:"fivehundred",style:{borderLeft:"1px solid gray",padding:"20px"}},n.createElement("h3",null,"Setup with TypeScript from node_modules"),n.createElement("pre",{tabIndex:0},n.createElement("code",{className:"html-code"},"import ts from 'typescript'\nimport tsvfs from '@typescript/vfs'\n\nconst fsMap = tsvfs.createDefaultMapFromNodeModules({ target: ts.ScriptTarget.ES2015 })\nfsMap.set('index.ts', 'console.log(\"Hello World\")')\n\n// ....\n              ")),n.createElement("h3",null,"Use the TypeScript CDN to get your lib.d.ts files"),n.createElement("pre",{tabIndex:0},n.createElement("code",{className:"html-code"},"import ts from 'typescript'\nimport tsvfs from '@typescript/vfs'\n\nconst fsMap = await tsvfs.createDefaultMapFromCDN(compilerOptions, ts.version, true, ts)\nfsMap.set('index.ts', 'console.log(\"Hello World\")')\n\nconst system = tsvfs.createSystem(fsMap)\nconst host = tsvfs.createVirtualCompilerHost(system, compilerOptions, ts)\n\nconst program = ts.createProgram({\n  rootNames: [...fsMap.keys()],\n  options: compilerOptions,\n  host: host.compilerHost,\n})\n\n// This will update the fsMap with new files\n// for the .d.ts and .js files\nprogram.emit()\n\n// Now I can look at the AST for the .ts file too\nconst index = program.getSourceFile('index.ts')\n              ")))))));t.default=e=>n.createElement(s.O,{locale:"en"},n.createElement(c,e))}}]);
//# sourceMappingURL=component---src-pages-dev-typescript-vfs-tsx-c0e869d1a2c68bba6b38.js.map